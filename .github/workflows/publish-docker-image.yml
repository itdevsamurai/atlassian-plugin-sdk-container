name: Publish Docker Image

on:
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * 0"
  push:
    branches:
      - main

jobs:
  publish-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        docker-file:
          - path: .
            tags: latest
            platforms: linux/amd64

          - path: node/16
            tags: node16
            platforms: linux/amd64

          - path: node/18
            tags: node18
            platforms: linux/amd64

          - path: node/20
            tags: node20
            platforms: linux/amd64

          - path: node/22
            tags: node22
            platforms: linux/amd64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # - name: Login to DockerHub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=ghcr.io/itdevsamurai/atlassian-plugin-sdk-container
          TAGZ=$(echo ${{ matrix.docker-file.tags }} | tr "," "\n")
          VERSION=${TAGZ[0]}
          for tag in $TAGZ
          do
            TAGS="${TAGS},${DOCKER_IMAGE}:${tag}"
          done
          echo "docker_image=${DOCKER_IMAGE}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Build and push main image
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ./${{ matrix.docker-file.path }}
          file: ./${{ matrix.docker-file.path }}/Dockerfile
          build-args: REFRESHED_AT=$(date +%Y-%m-%d)
          platforms: ${{ matrix.docker-file.platforms }}
          tags: ${{ steps.prepare.outputs.tags }}
